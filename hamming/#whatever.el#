class Human
  attr_reader :name, :surname, :sex

  def __init__
  end

  def say_your_name
    puts "Hello, my name is #{fullname}"
  end

  private

  def fullname
    name + surname
  end
end



class Woman < Human
  def __init__
    sex = 'female'
  end
end

class Men < Human
  def __init__
    sex = 'male'
  end
end

men = Men.new
men.sex # male


user = User.new(name: 'vasya', surname: 'vasin')

user.name # vasya
user.surname # vasin
user.xyz # foobar
user.fullname # vasya vasin

# ...
# ...

class DebitTransaction
  attributes :amount, :currency, :account_id

  def __init__
  end
  
  def execute
    whatever
  end
end

class CreditTransaction
  attributes :amount, :currency, :account_id

  def __init__
  end
  
  def execute
    whatever
  end
end

class MakeTransaction
  def __init__
  end
  
  def call(amount, currency, charged_account_id, received_account_id)
    cyka
  end
  
  private

  def cyka
  end
end

MakeTransaction.new.cyka



class Account
  attributes :currency, :balance, :account_id

  def init
  end

  def charge_money(money, receiver_account_id)
    MakeTransaction.new(money, currency, account_id).execute!
  end
end

account = Account.new("EUR", 100, "xyz")
account1 = Account.new("EUR", 0, "abc")

account.charge_money(100, account1.account_id)


(defun make-transaction (amount, account-id)
  (let ((account (find-account account-id)))
    (make-credit-transaction account, 100)
    (make-debit-transaction account, 100)
    )
)

